name: CI Pipeline

on:
  push:
    branches: [main, develop, auto-sync]
    paths:
      - 'services/attendance/mobile/**'
      - '.github/workflows/**'
  pull_request:
    branches: [main, develop, auto-sync]
    paths:
      - 'services/attendance/mobile/**'

env:
  FLUTTER_VERSION: '3.16.0'
  NODE_VERSION: '18'
  JAVA_VERSION: '17'

jobs:
  analyze-changes:
    runs-on: ubuntu-latest
    outputs:
      flutter-changed: ${{ steps.changes.outputs.flutter }}
      functions-changed: ${{ steps.changes.outputs.functions }}
      ios-changed: ${{ steps.changes.outputs.ios }}
      android-changed: ${{ steps.changes.outputs.android }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            flutter:
              - 'services/attendance/mobile/lib/**'
              - 'services/attendance/mobile/pubspec.yaml'
              - 'services/attendance/mobile/test/**'
            functions:
              - 'services/attendance/mobile/functions/**'
            ios:
              - 'services/attendance/mobile/ios/**'
            android:
              - 'services/attendance/mobile/android/**'

  security-scan:
    runs-on: ubuntu-latest
    needs: analyze-changes
    if: needs.analyze-changes.outputs.flutter-changed == 'true'
    steps:
      - uses: actions/checkout@v4
      
      - name: Run OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'DOT-ATTENDANCE'
          path: './services/attendance/mobile'
          format: 'ALL'
          args: >
            --enableRetired
            --enableExperimental
            --scan './services/attendance/mobile/pubspec.yaml'
            --scan './services/attendance/mobile/functions/package.json'
      
      - name: Upload OWASP results
        uses: actions/upload-artifact@v3
        with:
          name: dependency-check-report
          path: reports/

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: './services/attendance/mobile'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v2
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'

  flutter-analyze:
    runs-on: ubuntu-latest
    needs: analyze-changes
    if: needs.analyze-changes.outputs.flutter-changed == 'true'
    defaults:
      run:
        working-directory: services/attendance/mobile
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
          cache-key: 'flutter-${{ env.FLUTTER_VERSION }}'
          cache-path: '${{ runner.tool_cache }}/flutter'
      
      - name: Cache pub dependencies
        uses: actions/cache@v3
        with:
          path: ~/.pub-cache
          key: pub-cache-${{ runner.os }}-${{ hashFiles('**/pubspec.lock') }}
          restore-keys: pub-cache-${{ runner.os }}-
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Generate code
        run: dart run build_runner build --delete-conflicting-outputs
      
      - name: Analyze code
        run: flutter analyze --fatal-infos --fatal-warnings
      
      - name: Check formatting
        run: dart format --set-exit-if-changed .
      
      - name: Run custom lint rules
        run: dart run custom_lint

  flutter-test:
    runs-on: ubuntu-latest
    needs: [analyze-changes, flutter-analyze]
    if: needs.analyze-changes.outputs.flutter-changed == 'true'
    defaults:
      run:
        working-directory: services/attendance/mobile
    strategy:
      matrix:
        test-type: [unit, widget, integration]
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Generate code
        run: dart run build_runner build --delete-conflicting-outputs
      
      - name: Run unit tests
        if: matrix.test-type == 'unit'
        run: |
          flutter test test/unit/ \
            --coverage \
            --reporter=json \
            --file-reporter=json:test-results-unit.json
      
      - name: Run widget tests
        if: matrix.test-type == 'widget'
        run: |
          flutter test test/widget/ \
            --coverage \
            --reporter=json \
            --file-reporter=json:test-results-widget.json
      
      - name: Run integration tests
        if: matrix.test-type == 'integration'
        run: |
          flutter test test/integration/ \
            --coverage \
            --reporter=json \
            --file-reporter=json:test-results-integration.json
      
      - name: Upload test results
        uses: actions/upload-artifact@v3
        if: always()
        with:
          name: test-results-${{ matrix.test-type }}
          path: services/attendance/mobile/test-results-*.json
      
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3
        with:
          file: services/attendance/mobile/coverage/lcov.info
          flags: ${{ matrix.test-type }}
          name: codecov-${{ matrix.test-type }}

  functions-test:
    runs-on: ubuntu-latest
    needs: analyze-changes
    if: needs.analyze-changes.outputs.functions-changed == 'true'
    defaults:
      run:
        working-directory: services/attendance/mobile/functions
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: services/attendance/mobile/functions/package-lock.json
      
      - name: Install dependencies
        run: npm ci
      
      - name: Lint TypeScript
        run: npm run lint
      
      - name: Type check
        run: npm run build
      
      - name: Run security audit
        run: npm audit --audit-level=high
      
      - name: Run tests
        run: npm test -- --coverage --watchAll=false
        env:
          NODE_ENV: test
      
      - name: Upload coverage
        uses: codecov/codecov-action@v3
        with:
          file: services/attendance/mobile/functions/coverage/lcov.info
          flags: functions
          name: codecov-functions

  performance-test:
    runs-on: ubuntu-latest
    needs: [flutter-analyze, flutter-test]
    if: github.event_name == 'pull_request'
    defaults:
      run:
        working-directory: services/attendance/mobile
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Generate code
        run: dart run build_runner build --delete-conflicting-outputs
      
      - name: Run performance tests
        run: flutter test test/performance/ --reporter=json
      
      - name: Performance benchmark
        run: |
          flutter test --profile test/performance/benchmark_test.dart > benchmark_results.txt
          echo "## Performance Benchmark Results" >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY
          cat benchmark_results.txt >> $GITHUB_STEP_SUMMARY
          echo '```' >> $GITHUB_STEP_SUMMARY

  accessibility-test:
    runs-on: ubuntu-latest
    needs: flutter-test
    defaults:
      run:
        working-directory: services/attendance/mobile
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: ${{ env.FLUTTER_VERSION }}
          cache: true
      
      - name: Install dependencies
        run: flutter pub get
      
      - name: Run accessibility tests
        run: flutter test test/accessibility/ --reporter=json
      
      - name: Generate accessibility report
        run: |
          echo "## Accessibility Test Results" >> $GITHUB_STEP_SUMMARY
          flutter test test/accessibility/ --reporter=json | jq -r '.tests[] | select(.result == "failure") | "❌ \(.name): \(.message)"' >> $GITHUB_STEP_SUMMARY || echo "✅ All accessibility tests passed" >> $GITHUB_STEP_SUMMARY

  quality-gate:
    runs-on: ubuntu-latest
    needs: [security-scan, flutter-test, functions-test]
    if: always()
    steps:
      - name: Check quality gate
        run: |
          if [[ "${{ needs.security-scan.result }}" == "failure" ]]; then
            echo "❌ Security scan failed"
            exit 1
          fi
          if [[ "${{ needs.flutter-test.result }}" == "failure" ]]; then
            echo "❌ Flutter tests failed"
            exit 1
          fi
          if [[ "${{ needs.functions-test.result }}" == "failure" ]]; then
            echo "❌ Functions tests failed"
            exit 1
          fi
          echo "✅ All quality gates passed"
      
      - name: Update PR status
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v6
        with:
          script: |
            const { data: pullRequest } = await github.rest.pulls.get({
              owner: context.repo.owner,
              repo: context.repo.repo,
              pull_number: context.issue.number,
            });
            
            await github.rest.issues.createComment({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: context.issue.number,
              body: `## 🔍 CI Pipeline Results
              
              ✅ **Quality Gate**: PASSED
              ✅ **Security Scan**: PASSED  
              ✅ **Flutter Tests**: PASSED
              ✅ **Functions Tests**: PASSED
              ✅ **Code Analysis**: PASSED
              
              Ready for review! 🚀`
            });